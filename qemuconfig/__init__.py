#!/usr/bin/python
import json
class qemuConfig(object):
    def __init__(self, qemu_config_file = None):
        try:
            cfg_file = open(qemu_config_file,'r')
            config = json.load(cfg_file)
            self.ssh_keyfile = config['ssh_keyfile']
            self.qemu_path = config['qemu_path']
            self.kernel_path = config['kernel_path']
            self.append = config['append']
            self.ssh_port = config['ssh_port']
            self.ram_size = config['ram_size']
            self.monitor_port = config['monitor_port']
            self.hda = config['hda']
            self.gdb_port = config['gdb_port']
            self.vmlinux_path = config['vmlinux_path']
        except KeyError as e:
            print('key', e)
            print('[!] failed to load qemu_config_file')
        return
         


def test():
    data = {
            'qemu_path' : 'qemu-system-x86_64'\
            , 'kernel_path' : '/home/seed/linux/linux/arch/x86/boot/bzImage'\
            , 'append':"console=ttyS0 root=/dev/sda earlyprintk=serial net.ifnames=0"\
            , 'hda':'/home/seed/myimage/bullseye.img'\
            , 'ssh_port':10021\
            , 'ram_size':'1G'\
            , 'monitor_port':7878\
            , 'gdb_port':8888\
            , 'ssh_keyfile':'/home/seed/myimage/bullseye.id_ras'\
            , 'vmlinux_path':'/home/seed/linux/linux/vmlinux'\
            }
    with open('/home/seed/fuze/qemuconfig.cfg', 'w') as outfile:
        json.dump(data, outfile, indent = 4)
    c = qemuConfig('/home/seed/fuze/qemuconfig.cfg')
    print(c.qemu_path)
    print(c.kernel_path)
    print(c.append)
    print(c.ssh_port)
    print(c.ram_size)
    print(c.monitor_port)
    print(c.gdb_port)
    print(c.hda)

    
if __name__=='__main__':
    test()




