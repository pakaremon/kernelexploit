from neo4j import GraphDatabase, RoutingControl
import pickle
URI = "neo4j://192.168.92.1:7687"
AUTH = ("neo4j", "Fuzzing775")

class MyNeo4jInterface:
    def __init__(self, uri, user, password):
        self._uri = uri
        self._user = user
        self._password = password
        self._driver = None

    def connect(self):
        self._driver = GraphDatabase.driver(self._uri, auth=(self._user, self._password))

    def close(self):
        if self._driver is not None:
            self._driver.close()

    def query(self, cypher_query):
        with self._driver.session() as session:
            result = session.run(cypher_query)
            return result

    def add_friend(self,name, friend_name):
        self._driver.execute_query(
            "MERGE (a:Person {name: $name}) "
            "MERGE (friend:Person {name: $friend_name}) "
            "MERGE (a)-[:KNOWS]->(friend)",
            name=name, friend_name=friend_name, database_="neo4j",
        )


    def print_friends(self, name):
        records, _, _ = self._driver.execute_query(
            "MATCH (a:Person)-[:KNOWS]->(friend) WHERE a.name = $name "
            "RETURN friend.name ORDER BY friend.name",
            name=name, database_="neo4j", routing_=RoutingControl.READ,
        )
        for record in records:
            print(record["friend.name"])

def test1():
    data={'url':"neo4j://192.168.92.1:7687", 'username':'neo4j', 'password':'Fuzzing775'}
    with open('/home/seed/fuze/neo4j_interface/alaka.bin', 'wb') as file:
        pickle.dump(data, file)
    
    with open('/home/seed/fuze/neo4j_interface/alaka.bin', 'rb') as file:
        load  = pickle.load(file)
        print(load['url'])

def test():
    #TODO write dump user name password
    with open('/home/seed/fuze/neo4j_interface/alaka.bin', 'rb') as file:
        load  = pickle.load(file)

    #TODO use pickle to load username and password
    a = MyNeo4jInterface(load['url'], load['username'], load['password'])
    a.connect()
    a.add_friend( "Arthur", "Guinevere")
    a.add_friend( "Arthur", "Lancelot")
    a.add_friend( "Arthur", "Merlin")
    a.print_friends( "Arthur")


